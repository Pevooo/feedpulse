name: Secret Scanner

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  scan-secrets:
    name: Scan Secrets
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository with full history.
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Run Gitleaks using the official action.
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-path: ""      # Use default config or specify a custom file.
          fail: true           # Fail immediately if secrets are found.

      # Step 3: Install TruffleHog.
      - name: Install TruffleHog
        run: |
          wget https://github.com/trufflesecurity/trufflehog/releases/download/v3.14.0/trufflehog_3.14.0_linux_amd64.tar.gz
          tar -xzf trufflehog_3.14.0_linux_amd64.tar.gz
          sudo mv trufflehog /usr/local/bin/

      # Step 4: Run TruffleHog in git mode, scanning all commits in the pull request.
      - name: Run TruffleHog Git Scan for PR Commits
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Scanning pull request commits from base ${{ github.event.pull_request.base.sha }} on branch ${{ github.event.pull_request.head.ref }}..."
            trufflehog git file://${{ github.workspace }} \
              --since-commit ${{ github.event.pull_request.base.sha }} \
              --branch ${{ github.event.pull_request.head.ref }} \
              --json | jq -r '{commit: .SourceMetadata.Data.Git.commit, file: .SourceMetadata.Data.Git.file, detector: .DetectorName, secret: .Raw}' > trufflehog_filtered.json
          else
            echo "Scanning push commits from base ${{ github.event.before }} on branch ${{ github.ref_name }}..."
            trufflehog git file://${{ github.workspace }} \
              --since-commit ${{ github.event.before }} \
              --branch ${{ github.ref_name }} \
              --json | jq -r '{commit: .SourceMetadata.Data.Git.commit, file: .SourceMetadata.Data.Git.file, detector: .DetectorName, secret: .Raw}' > trufflehog_filtered.json
          fi
          echo "Filtered TruffleHog results:"
          cat trufflehog_filtered.json
          if [ -s trufflehog_filtered.json ]; then
            echo "Secrets found! Failing the job."
            exit 1
          else
            echo "No secrets found."
          fi

      # Step 5: Upload the filtered TruffleHog results as an artifact.
      - name: Upload TruffleHog Output
        if: failure() || always()
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-scan-results
          path: trufflehog_filtered.json
